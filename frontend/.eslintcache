[{"/Users/staffan/Documents/GitHub/users-app/frontend/src/index.js":"1","/Users/staffan/Documents/GitHub/users-app/frontend/src/App.js":"2","/Users/staffan/Documents/GitHub/users-app/frontend/src/reportWebVitals.js":"3","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/Navbar.js":"4","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/Dashboard.js":"5","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/auth/Login.js":"6","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/auth/SignUp.js":"7","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/Posts/Posts.js":"8","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/ShowPost/ShowPost.js":"9","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/Map/Map.js":"10"},{"size":500,"mtime":1607455292990,"results":"11","hashOfConfig":"12"},{"size":971,"mtime":1607456240416,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607455292991,"results":"14","hashOfConfig":"12"},{"size":816,"mtime":1607455292989,"results":"15","hashOfConfig":"12"},{"size":202,"mtime":1607455292989,"results":"16","hashOfConfig":"12"},{"size":2294,"mtime":1607455292990,"results":"17","hashOfConfig":"12"},{"size":2245,"mtime":1607455292990,"results":"18","hashOfConfig":"12"},{"size":1055,"mtime":1607502000363,"results":"19","hashOfConfig":"12"},{"size":1101,"mtime":1607456066305,"results":"20","hashOfConfig":"12"},{"size":2896,"mtime":1607456066305,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"h7kev3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/staffan/Documents/GitHub/users-app/frontend/src/index.js",[],["47","48"],"/Users/staffan/Documents/GitHub/users-app/frontend/src/App.js",[],"/Users/staffan/Documents/GitHub/users-app/frontend/src/reportWebVitals.js",[],"/Users/staffan/Documents/GitHub/users-app/frontend/src/components/Navbar.js",[],"/Users/staffan/Documents/GitHub/users-app/frontend/src/components/Dashboard.js",[],"/Users/staffan/Documents/GitHub/users-app/frontend/src/components/auth/Login.js",["49"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const loggedInUser = this.state;\n\n    axios\n      .post('http://localhost:5000/tokens', {\n        username: loggedInUser.username,\n        password: loggedInUser.password,\n      })\n      .then((res) => {\n        const token = res.data.token;\n        //Set token to local storage\n        localStorage.setItem('token', token);\n\n        alert(`Signed In Successfully!`);\n        window.location.href = 'http://localhost:3000/dashboard';\n      })\n      .catch((err) => {\n        alert(`${err.response.data.message}`);\n        this.setState({ username: '', email: '', password: '' });\n      });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h3>Sign In</h3>\n\n        <div className='form-group'>\n          <label>Username</label>\n          <input\n            type='text'\n            className='form-control'\n            placeholder='Enter username'\n            id='username'\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className='form-group'>\n          <label>Password</label>\n          <input\n            type='password'\n            className='form-control'\n            placeholder='Enter password'\n            id='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className='form-group'>\n          <div className='custom-control custom-checkbox '>\n            <input\n              type='checkbox'\n              className='custom-control-input '\n              id='customCheck1'\n            />\n            <label className='custom-control-label' htmlFor='customCheck1'>\n              Remember me\n            </label>\n          </div>\n        </div>\n\n        <button type='submit' className='btn btn-block bg-cl'>\n          Submit\n        </button>\n        <p className='forgot-password text-right'>\n          Forgot <a href='#'>password?</a>\n        </p>\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/auth/SignUp.js",["50"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass SignUp extends Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newUser = this.state;\n\n    axios\n      .post('http://localhost:5000/users', {\n        username: newUser.username,\n        email: newUser.email,\n        password: newUser.password,\n      })\n      .then((res) => {\n        const result = res.data.data;\n        alert('Congrats... Your account is created. Log in to continue');\n        window.location.href = 'http://localhost:3000/signin';\n      })\n      .catch((err) => {\n        console.log(err.response);\n        alert(`${err.response.data.message}`);\n        this.setState({ username: '', email: '', password: '' });\n      });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h3>Sign Up</h3>\n\n        <div className='form-group'>\n          <label>User name</label>\n          <input\n            onChange={this.handleChange}\n            id='username'\n            type='text'\n            className='form-control'\n            placeholder='User name'\n            value={this.state.username}\n          />\n        </div>\n\n        <div className='form-group'>\n          <label>Email address</label>\n          <input\n            onChange={this.handleChange}\n            type='email'\n            className='form-control'\n            placeholder='Enter email'\n            id='email'\n            value={this.state.email}\n          />\n        </div>\n\n        <div className='form-group'>\n          <label>Password</label>\n          <input\n            onChange={this.handleChange}\n            type='password'\n            className='form-control'\n            placeholder='Enter password'\n            id='password'\n            value={this.state.password}\n          />\n        </div>\n\n        <button type='submit' className='btn btn-block bg-cl'>\n          Sign Up\n        </button>\n        <p className='forgot-password text-right'>\n          Already registered <a href='/signin'>Sign In?</a>\n        </p>\n      </form>\n    );\n  }\n}\n\nexport default SignUp;\n","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/Posts/Posts.js",["51","52"],"/Users/staffan/Documents/GitHub/users-app/frontend/src/components/ShowPost/ShowPost.js",["53"],"import React, { Link } from 'react-router-dom';\nimport './ShowPost.css';\nimport Map from '../Map/Map';\n\nconst dateRaw = new Date();\nconst dateString = dateRaw.toDateString();\nconst user = {\n    id: 1,\n    username: \"Harry\"\n}\n\nfunction ShowPost({ imgSource, adress, title, description }) {\n    return (\n        <div className=\"ShowPost-container\">\n            <div className=\"ShowPost-card\">\n                <Link to=\"/post/id\"><img src={imgSource}></img></Link>\n                <p className=\"ShowPost-infoBox\"><em><strong>Submitted </strong><br />{dateString}</em><br /><br /> <strong>by </strong><a href=\"/User/:id\">{user.username}</a></p>\n                <h2 className=\"ShowPost-title\">{title}</h2>\n                <div className=\"desc-and-map\">\n                <div>\n                    <p className=\"ShowPost-desc\">{description}</p>\n                    <p className=\"ShowPost-adress\"><i class=\"fas fa-map-marked-alt\"></i> {adress}</p>\n                    </div>\n                    <Map adress={adress} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ShowPost;","/Users/staffan/Documents/GitHub/users-app/frontend/src/components/Map/Map.js",["54","55"],"import React, { useLayoutEffect, useState } from 'react';\nimport './Map.css'\n\nconst Map = ({adress}) => {\n  const [location, setLocation] = useState(adress);\n\n  // Create a reference to the HTML element we want to put the map on\n  const mapRef = React.useRef(null);\n\n  const submitHandler = (e) => {\n    const userInput = document.getElementById('userInput').value;\n    e.preventDefault();\n    //return if user input is empty\n    if(!userInput) return;\n    setLocation(userInput);\n  }\n\n  /**\n   * Create the map instance\n   * While `useEffect` could also be used here, `useLayoutEffect` will render\n   * the map sooner\n   */\n  useLayoutEffect(() => {\n\n    //emptys the map in the beginning of each render\n    document.getElementById('map').innerHTML = '';\n\n    // `mapRef.current` will be `undefined` when this hook first runs; edge case that\n    if (!mapRef.current) return;\n    const H = window.H;\n    const platform = new H.service.Platform({\n      apikey: \"4hZBBO5HOy_b0h_4xBfFNHrcIQEurBqR58bhr3nIgCs\"\n    });\n    const defaultLayers = platform.createDefaultLayers();\n    var service = platform.getSearchService();\n\n    // Call the geocode method with the geocoding parameters,\n    // the callback and an error callback function (called if a\n    // communication error occurs):\n    service.geocode({ q: location }, result => {\n      if(result.items.length === 0) return;\n      var pinIcon = new H.map.Icon(\"https://www.flaticon.com/svg/static/icons/svg/484/484167.svg\", { size: { w: 32, h: 32 } }),\n        coords = { lat: result.items[0].position.lat, lng: result.items[0].position.lng },\n        marker = new H.map.Marker(coords, { icon: pinIcon });\n\n      // Render map with provided coordinates in the center\n      var map = new H.Map(\n        mapRef.current,\n        defaultLayers.vector.normal.map,\n        {\n          zoom: 12,\n          center: coords,\n          pixelRatio: window.devicePixelRatio || 1\n        });\n\n      //add marker to map\n      map.addObject(marker);\n\n      // MapEvents enables the event system\n      // Behavior implements default interactions for pan/zoom (also on mobile touch environments)\n      // This variable is unused and is present for explanatory purposes\n      const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n\n      // Create the default UI components to allow the user to interact with them\n      // This variable is unused\n      const ui = H.ui.UI.createDefault(map, defaultLayers);\n    })\n  }, [location]); // This will run this hook every time the location i updated\n\n  return <div className=\"Map\">\n    <div id=\"map\" ref={mapRef} style={{ height: \"300px\", width: \"300px\" }} />\n    <form onSubmit={submitHandler}>\n    <div className=\"input-group\">\n      <input type=\"text\" id=\"userInput\" placeholder={adress}></input>\n      <button type=\"submit\">Search</button>\n      </div>\n    </form>\n  </div>;\n};\n\nexport default Map;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":83,"column":18,"nodeType":"62","endLine":83,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":26,"column":15,"nodeType":"65","messageId":"66","endLine":26,"endColumn":21},{"ruleId":"63","severity":1,"message":"67","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":16},{"ruleId":"63","severity":1,"message":"68","line":5,"column":7,"nodeType":"65","messageId":"66","endLine":5,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":16,"column":37,"nodeType":"62","endLine":16,"endColumn":58},{"ruleId":"63","severity":1,"message":"71","line":62,"column":13,"nodeType":"65","messageId":"66","endLine":62,"endColumn":21},{"ruleId":"63","severity":1,"message":"72","line":66,"column":13,"nodeType":"65","messageId":"66","endLine":66,"endColumn":15},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'ShowPost' is defined but never used.","'shortText' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'behavior' is assigned a value but never used.","'ui' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]